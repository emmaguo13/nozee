pragma circom 2.1.4;

include "./regex_helpers.circom";

template Timestamp(max_json_bytes) {
    signal input msg[max_json_bytes];
    signal output out;

    var num_bytes = max_json_bytes;
    signal in[num_bytes];
    for (var i = 0; i < num_bytes; i++) {
        in[i] <== msg[i];
    }
    component eq[10][num_bytes];
    component and[10][num_bytes];
    component multi_or[3][num_bytes];
    signal states[num_bytes+1][8];

    for (var i = 0; i < num_bytes; i++) {
            states[i][0] <== 1;
    }
    for (var i = 1; i < 8; i++) {
            states[0][i] <== 0;
    }

    for (var i = 0; i < num_bytes; i++) {
            eq[0][i] = IsEqual();
            eq[0][i].in[0] <== in[i];
            eq[0][i].in[1] <== 34;
            and[0][i] = AND();
            and[0][i].a <== states[i][0];
            and[0][i].b <== eq[0][i].out;
            states[i+1][1] <== and[0][i].out;
            eq[1][i] = IsEqual();
            eq[1][i].in[0] <== in[i];
            eq[1][i].in[1] <== 101;
            and[1][i] = AND();
            and[1][i].a <== states[i][1];
            and[1][i].b <== eq[1][i].out;
            states[i+1][2] <== and[1][i].out;
            eq[2][i] = IsEqual();
            eq[2][i].in[0] <== in[i];
            eq[2][i].in[1] <== 120;
            and[2][i] = AND();
            and[2][i].a <== states[i][2];
            and[2][i].b <== eq[2][i].out;
            states[i+1][3] <== and[2][i].out;
            eq[3][i] = IsEqual();
            eq[3][i].in[0] <== in[i];
            eq[3][i].in[1] <== 112;
            and[3][i] = AND();
            and[3][i].a <== states[i][3];
            and[3][i].b <== eq[3][i].out;
            states[i+1][4] <== and[3][i].out;
            eq[4][i] = IsEqual();
            eq[4][i].in[0] <== in[i];
            eq[4][i].in[1] <== 34;
            and[4][i] = AND();
            and[4][i].a <== states[i][4];
            and[4][i].b <== eq[4][i].out;
            eq[5][i] = IsEqual();
            eq[5][i].in[0] <== in[i];
            eq[5][i].in[1] <== 115;
            and[5][i] = AND();
            and[5][i].a <== states[i][5];
            and[5][i].b <== eq[5][i].out;
            multi_or[0][i] = MultiOR(2);
            multi_or[0][i].in[0] <== and[4][i].out;
            multi_or[0][i].in[1] <== and[5][i].out;
            states[i+1][5] <== multi_or[0][i].out;
            eq[6][i] = IsEqual();
            eq[6][i].in[0] <== in[i];
            eq[6][i].in[1] <== 58;
            and[6][i] = AND();
            and[6][i].a <== states[i][5];
            and[6][i].b <== eq[6][i].out;
            eq[7][i] = IsEqual();
            eq[7][i].in[0] <== in[i];
            eq[7][i].in[1] <== 115;
            and[7][i] = AND();
            and[7][i].a <== states[i][6];
            and[7][i].b <== eq[7][i].out;
            multi_or[1][i] = MultiOR(2);
            multi_or[1][i].in[0] <== and[6][i].out;
            multi_or[1][i].in[1] <== and[7][i].out;
            states[i+1][6] <== multi_or[1][i].out;
            eq[8][i] = IsEqual();
            eq[8][i].in[0] <== in[i];
            eq[8][i].in[1] <== 100;
            and[8][i] = AND();
            and[8][i].a <== states[i][6];
            and[8][i].b <== eq[8][i].out;
            eq[9][i] = IsEqual();
            eq[9][i].in[0] <== in[i];
            eq[9][i].in[1] <== 100;
            and[9][i] = AND();
            and[9][i].a <== states[i][7];
            and[9][i].b <== eq[9][i].out;
            multi_or[2][i] = MultiOR(2);
            multi_or[2][i].in[0] <== and[8][i].out;
            multi_or[2][i].in[1] <== and[9][i].out;
            states[i+1][7] <== multi_or[2][i].out;
    }

    signal final_state_sum[num_bytes+1];
    final_state_sum[0] <== states[0][7];
    for (var i = 1; i <= num_bytes; i++) {
            final_state_sum[i] <== final_state_sum[i-1] + states[i][7];
    }
    out <== final_state_sum[num_bytes];
}

component main { public [ msg ] } = Timestamp(300); // header is 94 right now # works

/* INPUT = {"msg":["123","34","105","97","116","34","58","49","54","56","50","53","56","48","52","50","53","44","34","101","120","112","34","58","49","54","56","51","50","49","54","57","52","54","44","34","97","122","112","34","58","34","120","107","81","89","49","73","48","82","103","102","120","80","104","67","78","116","74","90","55","48","99","100","56","111","84","122","121","109","68","84","49","114","34","44","34","115","99","111","112","101","34","58","34","111","112","101","110","105","100","32","112","114","111","102","105","108","101","32","101","109","97","105","108","34","125","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"]} */